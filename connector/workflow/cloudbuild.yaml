steps:
# Clone playwright test repository
# - name: gcr.io/cloud-builders/git
#   entrypoint: 'bash'
#   args:
#   - '-c'
#   - |
#     git config --global user.name ${_GIT_USERNAME}
#     git config --global user.email ${_GIT_USEREMAIL}
#     git remote set-url origin ${_GIT_REPO} 
#     git checkout main
#   id: 'git-initialize'
#   waitFor: ['-'] # The '-' indicates that this step begin immediately
  
# Run analysis on newman postman api test
- name: 'gcr.io/cloud-builders/npm'
  dir: api/
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    npm install newman
    npm install newman-reporter-junitfull
    newman run ./collection/MsDynamics.postman_collection.json -e ./environment/connector-msdynamics.postman_environment.json --env-var baseUrl=$(cat /workspace/connector/msdynamics_url.txt) -d ./iteration-data/iterations.json -r cli,junit --reporter-junit-export ./results/api-test-result.xml
    git add .
    git commit -m "feat: added postman api test result xml file"
    git push origin main
  id: 'execute-api-tests'
  waitFor: ['-']

# Copy environment variables
- name: 'gcr.io/cloud-builders/npm'
  dir: connector/
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    echo "PRIVATE_KEY: $$PRIVATE_KEY"
  id: 'copy-env-variables'
  waitFor: ['execute-api-tests']
  secretEnv: ['PRIVATE_KEY']

# Build the artifact image
- name: 'gcr.io/cloud-builders/docker'
  dir: connector/
  args: 
    [ 
      'build',
      '--no-cache',
      '-t',
      '${_IMAGE_NAME}:latest',
      '-t',
      '${_IMAGE_NAME}:$COMMIT_SHA',
      '-t',
      '${_IMAGE_NAME}:$BUILD_ID',
      '.'
    ]
  id: 'build-connector-image'
  waitFor: ['copy-env-variables'] 

# Push the build image to Artifact Registry
- name: 'gcr.io/cloud-builders/docker'
  args: 
    [
      'push', 
      '${_IMAGE_NAME}:$COMMIT_SHA'
    ]
  id: 'push-image-to-artifact-registry'
  waitFor: ['build-connector-image'] # The push start once build is complete

  # Deploy artifact registry image to Cloud Run
- name: 'gcr.io/cloud-builders/gcloud'
  dir: connector/
  args:
    [
      'run',
      'deploy',
      '${_SERVICE_NAME}',
      '--image',
      '${_IMAGE_NAME}:$COMMIT_SHA',
      '--project',
      'sumit-solutions',
      '--region',
      'us-central1',
      '--platform',
      'managed',
      '--allow-unauthenticated'
    ]
  id: 'deploy-image-to-cloud-run'
  waitFor: ['push-image-to-artifact-registry']

availableSecrets:
  secretManager:
  - versionName: projects/sumit-solutions/secrets/PRIVATE_KEY/versions/latest
    env: 'PRIVATE_KEY'

# # Push the container image to Container Registry
# - name: 'gcr.io/cloud-builders/docker'
#   args: 
#     [
#       'push', 
#       'gcr.io/$PROJECT_ID/${_IMAGE_NAME}:$COMMIT_SHA'
#     ]
#   id: 'push-image-to-container-registry'
#   waitFor: ['build-image-${_IMAGE_NAME}'] # The push start once build is done

# # Deploy container image to Cloud Run
# - name: 'gcr.io/cloud-builders/gcloud'
#   args:
#     [
#       'run',
#       'deploy',
#       '${_IMAGE_NAME}',
#       '--image',
#       'gcr.io/$PROJECT_ID/${_IMAGE_NAME}:$COMMIT_SHA',
#       '--region',
#       'us-central1',
#       '--platform',
#       'managed',
#       '--allow-unauthenticated',
#     ]

# images:
# - 'gcr.io/$PROJECT_ID/${_IMAGE_NAME}:latest'
# - 'gcr.io/$PROJECT_ID/${_IMAGE_NAME}:$COMMIT_SHA'
# - 'gcr.io/$PROJECT_ID/${_IMAGE_NAME}:$BUILD_ID'
